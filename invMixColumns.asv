function inv_mc=invMixColumns
A={
    '04' 'E0' '48' '28';
    '66' 'CB' 'F8' '06';
    '81' '19' 'D3' '26';
    'E5' '9A' '7A' '4C'
  };

B={
    '0E' '0B' '0D' '09';                           
    '09' '0E' '0B' '0D';
    '0D' '09' '0E' '0B';
    '0B' '0D' '09' '0E'
  };
%{
Results
    'D4'    'E0'    'B8'    '1E'
    'BF'    'B4'    '41'    '27'
    '5D'    '52'    '11'    '98'
    '30'    'AE'    'F1'    'E5'
  %}
%--------------------------------------------------------------------------
for k=4:4
    for i=1:4
        sum = 0;
        for j=1:4
            if (B{i,j} == '09')
                % 09 = 0000 1001 = 0000 1000 xor 0000 0001
                % 09 = (number * 8) xor (number * 1)
                % number *2 = left shift and check to add 27.
                A_bin = hex2bin(A{j,k},4);
                n=length(A{j,k});
                if(n==1)
                    A_dec=bin2dec(A_bin(1,:));
                else
                    A_dec = uhex2dec(A_bin(:,:));
                end
                ee=hex2dec(A{j,k});
                    for inner = 1:3
                        if (inner == 1)
                            eee=A_dec;
                            A_b=A_bin;
                            A_sh = bitshift(uint8(A_dec),1);
                        else
                            Adh=dec2hex(eee);
                            A_b=hex2bin(Adh,4);
                            A_sh = bitshift(uint8(eee),1);
                        end
                        if(A_b(1,1)=='1' && eee>10)
                            eee=bitxor(uint8(A_sh),uint8(27));
                        else
                            eee=A_sh;
                        end
                    end
                e=bitxor(ee,eee);
            elseif (B{i,j}== '0B')
                % 0B = 0000 1011 = 0000 1000 xor 0000 0010 xor 0000 0001
                % 0B = (number * 8) xor (number * 2) xor (number *1)
                % number *2 = left shift and check to add 27.
                A_bin = hex2bin(A{j,k},4);
                n=length(A{j,k});
                if(n==1)
                    A_dec=bin2dec(A_bin(1,:));
                else
                    A_dec = uhex2dec(A_bin(:,:));
                end
                ee=hex2dec(A{j,k});
                for shft = 2:3
                    if(shft == 2)inner =2; else inner=1;end
                    while (inner <= shft)
                        if (inner == 1 || shft ==2)
                            eee=A_dec;
                            A_b=A_bin;
                            A_sh = bitshift(uint8(A_dec),1);
                        else 
                            Adh=dec2hex(eee);
                            A_b=hex2bin(Adh,4);
                            A_sh = bitshift(uint8(eee),1);
                        end
                        if(A_b(1,1)=='1' && eee>10)
                            eee=bitxor(uint8(A_sh),uint8(27));
                        else
                            eee=A_sh;
                        end
                      inner =inner + 1;
                    end
                  ee= bitxor(ee,eee);
                end
                e=ee;
            elseif (B{i,j}== '0D') 
                % 0D = 0000 1011 = 0000 1000 xor 0000 0100 xor 0000 0001
                % 0D = (number * 8) xor (number * 4) xor (number *1)
                % number *2 = left shift and check to add 27.
                A_bin = hex2bin(A{j,k},4);
                n=length(A{j,k});
                if(n==1)
                    A_dec=bin2dec(A_bin(1,:));
                else
                    A_dec = uhex2dec(A_bin(:,:));
                end
                ee=hex2dec(A{j,k});
                for shft = 2:3
                    inner=1;
                    while (inner <= shft)
                        if (inner == 1)
                            eee= A_dec;
                            A_b=A_bin;
                            A_sh = bitshift(uint8(A_dec),1);
                        else
                            %A_b=dec2bin(eee);
                            Adh=dec2hex(eee);
                            A_b=hex2bin(Adh,4);
                            A_sh = bitshift(uint8(eee),1);
                        end
                        if(A_b(1,1)=='1' && eee>10)
                            eee=bitxor(uint8(A_sh),uint8(27));
                        else
                            eee=A_sh;
                        end
                      inner =inner + 1;
                    end
                  ee= bitxor(ee,eee);
                end
                e=ee;
            else
                % 0E = 0000 1110 = 0000 1000 xor 0000 0100 xor 0000 0010
                % 0E = (number * 8) xor (number * 4) xor (number *2)
                % number *2 = left shift and check to add 27.
                check=1;
                disp('0E');
                A{j,k}
                A_bin = hex2bin(A{j,k},4)
                n=length(A{j,k})
                if(n==1)
                    A_dec=bin2dec(A_bin(1,:))
                else
                    A_dec = uhex2dec(A_bin(:,:))
                end
                ee=0;
                for shft = 1:3
                    for inner = 1:shft
                        inner
                        if (inner == 1)
                            eee=A_dec;
                            A_b=A_bin;
                            A_sh = bitshift(uint8(A_dec),1)
                        else
                            Adh=dec2hex(eee)
                            A_b=hex2bin(Adh,4)
                            A_sh = bitshift(uint8(eee),1)
                            if(eee == 'A' || eee == 'B' || eee == 'C' || eee == 'D' || eee == 'E' || eee == 'F')
                                check = 0;
                            end
                        end
                        if(A_b(1,1)=='1' && eee>10)
                            if(check==1)
                                eee=bitxor(uint8(A_sh),uint8(27))
                            else
                        else
                            eee=A_sh
                        end
                    end
                  ee= bitxor(ee,eee); 
                end
                e=ee;
            end
            sum = bitxor(e,sum);
        end
        inv_mc{i,k}= dec2hex(sum);
    end
end
end